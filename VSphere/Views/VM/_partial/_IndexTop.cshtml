@model List<VMViewModel>

@{
    var totalOn = 0;
    var totalOff = 0;
    var total = 0;

    if (Model != null)
    {
        totalOn = Model.Select(x => x.Power == "POWERED_ON").Count();
        totalOff = Model.Select(x => x.Power == "POWERED_OFF").Count();
        total = Model.Count();
    }

}

<section class="content">
    <div class="container-fluid">
        <!-- Small boxes (Stat box) -->

        <div class="row">

            <!-- ./col -->
            <div class="col-md-4">
                <!-- small box -->
                <div class="small-box bg-success">
                    <div class="inner">
                        <h3>@totalOn</h3>

                        <p>Total Ligadas</p>
                    </div>
                </div>
            </div>
            <!-- ./col -->
            <div class="col-md-4">
                <!-- small box -->
                <div class="small-box bg-danger">
                    <div class="inner">
                        <h3>@totalOff</h3>

                        <p>Total de Desligadas</p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <!-- small box -->
                <div class="small-box bg-info">
                    <div class="inner">
                        <h3>@total</h3>
                        <p>Total de VMs</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">

            <div class="col-md-4">
                @await Html.PartialAsync("~/Views/Shared/_partial/_filter/_ServerDropBox.cshtml", new { servers = ViewBag.Servers })
            </div>

            <div class="col-md-4">
                @await Html.PartialAsync("~/Views/Shared/_partial/_filter/_SearchBtn.cshtml")
            </div>

        </div>

        <!-- ./col -->
    </div><!-- /.container-fluid -->
</section>